#
# upstart script for running ejabberd
#
# replaces init script so that events can 
# be sent to dependent processes and 
# respawning can be attempted.
#

start on runlevel [2345]
stop on runlevel [016]

env PATH=/sbin:/bin:/usr/sbin:/usr/bin
env EJABBERD=/usr/sbin/ejabberd
env EJABBERDCTL=/usr/sbin/ejabberdctl
env EJABBERDRUN=/var/run/ejabberd
env EJABBERDUSER=ejabberd
env EJABBERDDEFAULTS=/etc/default/ejabberd

export PATH
expect daemon
chdir /var/run/ejabberd

pre-start script
    if [ ! -f $EJABBERD ]; then
        stop; exit 0
    fi
    
    if [ ! -f $EJABBERDCTL ]; then
        stop; exit 0
    fi

    # create run dir
    if [ ! -d $EJABBERDRUN ]; then
        mkdir -p $EJABBERDRUN
        if [ $? -ne 0 ]; then
            stop
            exit 0
        fi
        chmod 0755 $EJABBERDRUN
        chown ejabberd:ejabberd $EJABBERDRUN
    fi

    # include any local settings
    if [ -f $EJABBERDDEFAULTS ]; then
        . $EJABBERDDEFAULTS
    fi
    
end script

# start
script
    exec start-stop-daemon --start -b -c $EJABBERDUSER --exec $EJABBERD -- -noshell -noinput
end script

# pre-stop 
# 
# request a graceful exit. 
#
pre-stop script
    ctl()
    {
        action="$1"
        su $EJABBERDUSER -c "$EJABBERDCTL $action" >/dev/null
    }

    if ctl stop ; then
        cnt=0
        sleep 1
        while ctl status || test $? = 1 ; do
            cnt=`expr $cnt + 1`
            if [ $cnt -ge 60 ] ; then
                echo -n "failed to gracefully stop"
                break
            fi
            sleep 1
        done
    else
        echo -n "failed to gracefully stop"
    fi
end script