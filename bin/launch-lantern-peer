#!/usr/bin/env bash


################################################
#
# launches a lantern-peer node using the current
# boostrap and the cloudformation template 
# lantern-peer.json. 
#
# Assumes the aws cloud formation command line 
# tools are installed and configured.
#
#################################################

STACK_NAME=${1}
STACK_TEMPLATE="$(dirname $0)/../cloudformation/lantern-peer.json"
BOOTSTRAP_DIR="$(dirname $0)/../bootstrap"
BUILDBOOTSTRAP="$(dirname $0)/build-bootstrap"

if [[ -z "${STACK_NAME}" ]]; then
    echo "launches a new lantern-peer node"
    echo "usage ${0} <node name>"
    exit 1
fi

if [[ ! -f $(which cfn-create-stack) ]]; then 
    echo "Cannot find AWS Cloud Formation command line tools, see: http://aws.amazon.com/developertools/2555753788650372"
    exit 1
fi

#
# create a base64 encoded bootstrap script
#
BOOTSTRAP_GZ=$(mktemp /tmp/bbs-XXXXXX)
BOOTSTRAP_B64=$(mktemp /tmp/b64-XXXXXX)
$BUILDBOOTSTRAP ${BOOTSTRAP_DIR} ${BOOTSTRAP_GZ} || exit 1
base64 -i ${BOOTSTRAP_GZ} -o ${BOOTSTRAP_B64} || exit 1

# assemble parameters. The boostrap is broken into parts 
# because each cloudformation template parameter has a max
# size of 4096 bytes.  They are reassembled inside the 
# template :P 
BOOTSTRAP1=$(dd if=${BOOTSTRAP_B64} bs=4096 count=1 skip=0)
BOOTSTRAP2=$(dd if=${BOOTSTRAP_B64} bs=4096 count=1 skip=1)
BOOTSTRAP3=$(dd if=${BOOTSTRAP_B64} bs=4096 count=1 skip=2)
BOOTSTRAP4=$(dd if=${BOOTSTRAP_B64} bs=4096 count=1 skip=3)

trim() { echo $1; }

#
# pick a random port for the lantern ssl proxy to run on
#
SSL_PROXY_PORT="0"
while [[ $SSL_PROXY_PORT -lt 1024 || $SSL_PROXY_PORT -gt 61024 ]]; do
    SSL_PROXY_PORT=$(trim $(od -An -N2 -i /dev/random))
done
echo "SSL proxy port is \"${SSL_PROXY_PORT}\""

PARAMETERS="LanternSSLProxyPort=${SSL_PROXY_PORT};Bootstrap=${BOOTSTRAP1}"

if [[ ! -z "${BOOTSTRAP2}" ]]; then
    PARAMETERS=${PARAMETERS}\;Bootstrap2\=${BOOTSTRAP2}
fi
if [[ ! -z "${BOOTSTRAP3}" ]]; then
    PARAMETERS=${PARAMETERS}\;Bootstrap3\=${BOOTSTRAP3}
fi
if [[ ! -z "${BOOTSTRAP4}" ]]; then
    PARAMETERS=${PARAMETERS}\;Bootstrap4\=${BOOTSTRAP4}
fi

# call create-stack to 
cfn-create-stack ${STACK_NAME} --template-file=${STACK_TEMPLATE} --parameters ${PARAMETERS}
